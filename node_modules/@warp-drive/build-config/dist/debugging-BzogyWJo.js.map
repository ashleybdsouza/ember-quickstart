{"version":3,"file":"debugging-BzogyWJo.js","sources":["../src/debugging.ts"],"sourcesContent":["/**\n * ## Debugging\n *\n * Many portions of the internals are helpfully instrumented with logging that can be activated\n * at build time. This instrumentation is always removed from production builds or any builds\n * that has not explicitly activated it. To activate it set the appropriate flag to `true`.\n *\n  @module @warp-drive/build-config/debugging\n  @main @warp-drive/build-config/debugging\n */\n/**\n *\n * Many portions of the internals are helpfully instrumented with logging that can be activated\nat build time. This instrumentation is always removed from production builds or any builds\nthat has not explicitly activated it. To activate it set the appropriate flag to `true`.\n\n```ts\n  let app = new EmberApp(defaults, {\n    emberData: {\n      debug: {\n          LOG_PAYLOADS: false, // data store received to update cache with\n          LOG_OPERATIONS: false, // updates to cache remote state\n          LOG_MUTATIONS: false, // updates to cache local state\n          LOG_NOTIFICATIONS: false,\n          LOG_REQUESTS: false,\n          LOG_REQUEST_STATUS: false,\n          LOG_IDENTIFIERS: false,\n          LOG_GRAPH: false,\n          LOG_INSTANCE_CACHE: false,\n      }\n    }\n  });\n  ```\n\n  @class DebugLogging\n  @public\n */\n/**\n * log payloads received by the store\n * via `push` or returned from a delete/update/create\n * operation.\n *\n * @property {boolean} LOG_PAYLOADS\n * @public\n */\nexport const LOG_PAYLOADS: boolean = false;\n/**\n * log remote-state updates to the cache\n *\n * @property {boolean} LOG_OPERATIONS\n * @public\n */\nexport const LOG_OPERATIONS: boolean = false;\n/**\n * log local-state updates to the cache\n *\n * @property {boolean} LOG_MUTATIONS\n * @public\n */\nexport const LOG_MUTATIONS: boolean = false;\n/**\n * log notifications received by the NotificationManager\n *\n * @property {boolean} LOG_NOTIFICATIONS\n * @public\n */\nexport const LOG_NOTIFICATIONS: boolean = false;\n/**\n * log requests issued by the RequestManager\n *\n * @property {boolean} LOG_REQUESTS\n * @public\n */\nexport const LOG_REQUESTS: boolean = false;\n/**\n * log updates to requests the store has issued to\n * the network (adapter) to fulfill.\n *\n * @property {boolean} LOG_REQUEST_STATUS\n * @public\n */\nexport const LOG_REQUEST_STATUS: boolean = false;\n/**\n * log peek, generation and updates to\n * Record Identifiers.\n *\n * @property {boolean} LOG_IDENTIFIERS\n * @public\n */\nexport const LOG_IDENTIFIERS: boolean = false;\n/**\n * log updates received by the graph (relationship pointer storage)\n *\n * @property {boolean} LOG_GRAPH\n * @public\n */\nexport const LOG_GRAPH: boolean = false;\n/**\n * log creation/removal of RecordData and Record\n * instances.\n *\n * @property {boolean} LOG_INSTANCE_CACHE\n * @public\n */\nexport const LOG_INSTANCE_CACHE: boolean = false;\n"],"names":["LOG_PAYLOADS","LOG_OPERATIONS","LOG_MUTATIONS","LOG_NOTIFICATIONS","LOG_REQUESTS","LOG_REQUEST_STATUS","LOG_IDENTIFIERS","LOG_GRAPH","LOG_INSTANCE_CACHE"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,YAAqB,GAAG,MAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,cAAuB,GAAG,MAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,aAAsB,GAAG,MAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,iBAA0B,GAAG,MAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,YAAqB,GAAG,MAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,kBAA2B,GAAG,MAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,eAAwB,GAAG,MAAK;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,SAAkB,GAAG,MAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,kBAA2B,GAAG;;;;;;;;;;;;;;;;;"}