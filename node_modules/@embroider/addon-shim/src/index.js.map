{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AddonInstance,\n  AddonMeta,\n  PackageInfo,\n  isDeepAddonInstance,\n} from '@embroider/shared-internals';\nimport buildFunnel from 'broccoli-funnel';\nimport commonAncestorPath from 'common-ancestor-path';\nimport { readFileSync } from 'fs';\nimport { dirname, isAbsolute, join, normalize, relative, resolve } from 'path';\nimport { satisfies } from 'semver';\n\nexport interface ShimOptions {\n  disabled?: (options: any) => boolean;\n}\n\nfunction addonMeta(pkgJSON: PackageInfo): AddonMeta {\n  let meta = pkgJSON['ember-addon'];\n  if (meta?.version !== 2 || meta?.type !== 'addon') {\n    throw new Error(`did not find valid v2 addon metadata in ${pkgJSON.name}`);\n  }\n  return meta as AddonMeta;\n}\n\nexport function addonV1Shim(directory: string, options: ShimOptions = {}) {\n  let pkg: PackageInfo = JSON.parse(\n    readFileSync(resolve(directory, './package.json'), 'utf8')\n  );\n\n  let meta = addonMeta(pkg);\n  let disabled = false;\n\n  function treeFor(\n    addonInstance: AddonInstance,\n    resourceMap: Record<string, string>,\n    // default expectation is for resourceMap to map from interior to exterior, swap if needed\n    swapInteriorExterior = false\n  ) {\n    const absoluteInteriorPaths = Object[\n      swapInteriorExterior ? 'values' : 'keys'\n    ](resourceMap).map((internalPath) => join(directory, internalPath));\n\n    if (absoluteInteriorPaths.length === 0) {\n      return;\n    }\n\n    const ancestorPath =\n      commonAncestorPath(...absoluteInteriorPaths.map(dirname)) ?? directory;\n    const ancestorPathRel = relative(directory, ancestorPath);\n    const ancestorTree = addonInstance.treeGenerator(ancestorPath);\n    const relativeInteriorPaths = absoluteInteriorPaths.map((absPath) =>\n      relative(ancestorPath, absPath)\n    );\n\n    return buildFunnel(ancestorTree, {\n      files: relativeInteriorPaths,\n      getDestinationPath(relativePath: string): string {\n        for (let [a, b] of Object.entries(resourceMap)) {\n          const interiorName = swapInteriorExterior ? b : a;\n          const exteriorName = swapInteriorExterior ? a : b;\n          if (join(ancestorPathRel, relativePath) === normalize(interiorName)) {\n            return exteriorName;\n          }\n        }\n        throw new Error(\n          `bug in addonV1Shim, no match for ${relativePath} in ${JSON.stringify(\n            resourceMap\n          )}`\n        );\n      },\n    });\n  }\n\n  return {\n    name: pkg.name,\n    included(\n      this: AddonInstance & {\n        registerV2Addon(name: string, dir: string): void;\n      },\n      ...args: unknown[]\n    ) {\n      let parentOptions;\n      if (isDeepAddonInstance(this)) {\n        parentOptions = this.parent.options;\n      } else {\n        parentOptions = this.app.options;\n      }\n\n      this.registerV2Addon(this.name, directory);\n\n      if (options.disabled) {\n        disabled = options.disabled(parentOptions);\n      }\n\n      // this is at the end so we can find our own autoImportInstance before any\n      // deeper v2 addons ask us to forward registrations upward to it\n      this._super.included.apply(this, args);\n    },\n\n    treeForApp(this: AddonInstance) {\n      if (disabled) {\n        return undefined;\n      }\n      let maybeAppJS = meta['app-js'];\n      if (maybeAppJS) {\n        return treeFor(this, maybeAppJS, true);\n      }\n    },\n\n    treeForAddon() {\n      // this never goes through broccoli -- it's always pulled into the app via\n      // ember-auto-import, as needed. This means it always benefits from\n      // tree-shaking.\n      return undefined;\n    },\n\n    treeForPublic(this: AddonInstance) {\n      if (disabled) {\n        return undefined;\n      }\n      let maybeAssets = meta['public-assets'];\n      if (maybeAssets) {\n        return treeFor(this, maybeAssets);\n      }\n    },\n\n    cacheKeyForTree(this: AddonInstance, treeType: string): string {\n      return `embroider-addon-shim/${treeType}/${directory}`;\n    },\n\n    isDevelopingAddon(this: AddonInstance) {\n      // if the app is inside our own directory, we must be under development.\n      // This setting controls whether ember-cli will watch for changes in the\n      // broccoli trees we expose, but it doesn't have any control over our\n      // files that get auto-imported into the app. For that, you should use\n      // ember-auto-import's watchDependencies option (and this should become\n      // part of the blueprint for test apps).\n      let appInstance = this._findHost();\n      return isInside(directory, appInstance.project.root);\n    },\n\n    registerV2Addon(this: AddonInstance, name: string, root: string): void {\n      let parentName: string;\n      if (isDeepAddonInstance(this)) {\n        parentName = this.parent.name;\n      } else {\n        parentName = this.parent.name();\n      }\n\n      // if we're being used by a v1 package, that package needs ember-auto-import 2\n      if ((this.parent.pkg['ember-addon']?.version ?? 1) < 2) {\n        let autoImport = locateAutoImport(this.parent.addons);\n        if (!autoImport.present) {\n          throw new Error(\n            `${parentName} needs to depend on ember-auto-import in order to use ${this.name}`\n          );\n        }\n\n        if (!autoImport.satisfiesV2) {\n          throw new Error(\n            `${parentName} has ember-auto-import ${autoImport.version} which is not new enough to use ${this.name}. It needs to upgrade to >=2.0`\n          );\n        }\n        autoImport.instance.registerV2Addon(name, root);\n      } else {\n        // This should only be done if we're being consumed by an addon\n        if (this.parent.pkg['ember-addon'].type === 'addon') {\n          // if we're being used by a v2 addon, it also has this shim and will\n          // forward our registration onward to ember-auto-import\n          (this.parent as EAI2Instance).registerV2Addon(name, root);\n        }\n      }\n    },\n  };\n}\n\nfunction isInside(parentDir: string, otherDir: string): boolean {\n  let rel = relative(parentDir, otherDir);\n  return Boolean(rel) && !rel.startsWith('..') && !isAbsolute(rel);\n}\n\ntype EAI2Instance = AddonInstance & {\n  registerV2Addon(name: string, root: string): void;\n};\n\nfunction locateAutoImport(addons: AddonInstance[]):\n  | { present: false }\n  | {\n      present: true;\n      version: string;\n      satisfiesV2: false;\n    }\n  | {\n      present: true;\n      version: string;\n      satisfiesV2: true;\n      instance: EAI2Instance;\n    } {\n  let instance = addons.find((a) => a.name === 'ember-auto-import');\n  if (!instance) {\n    return { present: false };\n  }\n  let version = instance.pkg.version;\n  let satisfiesV2 = satisfies(version, '>=2.0.0-alpha.0', {\n    includePrerelease: true,\n  });\n  if (satisfiesV2) {\n    return {\n      present: true,\n      version,\n      satisfiesV2,\n      instance: instance as EAI2Instance,\n    };\n  } else {\n    return {\n      present: true,\n      version,\n      satisfiesV2,\n    };\n  }\n}\n"]}