import '../../shared-chunks/mandatory-setter-1UQhiJOb.js';
import '@embroider/macros';
import '../../shared-chunks/env-BJLX2Arx.js';
import '../../shared-chunks/index-DTxy4Zgx.js';
import '../../shared-chunks/cache-gDE3bkXq.js';
import '../../@ember/-internals/meta/lib/meta.js';
import '../../@glimmer/destroyable/index.js';
import '../../@glimmer/validator/index.js';
import '../../@glimmer/manager/index.js';
import { onLoad } from '../../@ember/application/lib/lazy_load.js';
import '../../@ember/-internals/runtime/lib/mixins/registry_proxy.js';
import '../../@ember/-internals/runtime/lib/mixins/container_proxy.js';
import '../../@ember/-internals/runtime/lib/mixins/comparable.js';
import '../../@ember/-internals/runtime/lib/mixins/action_handler.js';
import '../../@ember/-internals/runtime/lib/mixins/-proxy.js';
import '../../@ember/enumerable/mutable.js';
import '../../@ember/-internals/runtime/lib/mixins/target_action_support.js';
import '../../@ember/-internals/runtime/lib/ext/rsvp.js';
import '../../shared-chunks/index-PYiGj1jp.js';
import '../../@ember/-internals/views/lib/system/action_manager.js';
import '../../@ember/-internals/views/lib/component_lookup.js';
import '../../shared-chunks/core_view-Cxne2_wu.js';
import '../../@ember/-internals/views/lib/mixins/class_names_support.js';
import '../../@ember/-internals/views/lib/mixins/child_views_support.js';
import '../../@ember/-internals/views/lib/mixins/view_state_support.js';
import '../../@ember/-internals/views/lib/mixins/view_support.js';
import '../../@ember/-internals/views/lib/mixins/action_support.js';
import '../../shared-chunks/index-BXPoca1S.js';
import '../../@ember/routing/none-location.js';
import '../../route-recognizer/index.js';
import '../../shared-chunks/rsvp-DaQAFb0W.js';
import '../../shared-chunks/router-B-Q1aYBn.js';
import '../../@ember/controller/index.js';
import '../../@glimmer/opcode-compiler/index.js';
import '../../shared-chunks/registry-DzfcDwii.js';
import '../../@glimmer/runtime/index.js';
import '../../@glimmer/reference/index.js';

let name = 'deferReadiness in `testing` mode';
onLoad('Ember.Application', function (ApplicationClass) {
  if (!ApplicationClass.initializers[name]) {
    ApplicationClass.initializer({
      name: name,
      initialize(application) {
        if (application.testing) {
          application.deferReadiness();
        }
      }
    });
  }
});
