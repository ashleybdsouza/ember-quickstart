declare module '@ember-data/graph/-private/edges/collection' {
  import type { StableRecordIdentifier } from '@warp-drive/core-types';
  import type { CollectionRelationship } from '@warp-drive/core-types/cache/relationship';
  import type { Links, Meta, PaginationLinks } from '@warp-drive/core-types/spec/json-api-raw';
  import type { UpgradedMeta } from '@ember-data/graph/-private/-edge-definition';
  import type { RelationshipState } from '@ember-data/graph/-private/-state';
  export interface CollectionEdge {
      definition: UpgradedMeta;
      identifier: StableRecordIdentifier;
      state: RelationshipState;
      remoteMembers: Set<StableRecordIdentifier>;
      remoteState: StableRecordIdentifier[];
      additions: Set<StableRecordIdentifier> | null;
      removals: Set<StableRecordIdentifier> | null;
      meta: Meta | null;
      links: Links | PaginationLinks | null;
      localState: StableRecordIdentifier[] | null;
      isDirty: boolean;
      transactionRef: number;
      _diff?: {
          add: Set<StableRecordIdentifier>;
          del: Set<StableRecordIdentifier>;
      };
  }
  export function createCollectionEdge(definition: UpgradedMeta, identifier: StableRecordIdentifier): CollectionEdge;
  export function legacyGetCollectionRelationshipData(source: CollectionEdge): CollectionRelationship;
}
//# sourceMappingURL=collection.d.ts.map